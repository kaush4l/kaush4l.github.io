{"version":3,"sources":["Components/Markdown.js","Components/Images/main.jpg","Components/DashboardComponent.js","Components/MarkdownRenderer.js","Components/MdFiles/Education.md","Components/EducationComponent.js","Components/MdFiles/Experience.md","Components/ExperienceComponent.js","Components/Themes.js","Components/MdFiles/Projects.md","Components/ProjectsComponent.js","Components/DisplayController.js","Components/Images/logo.jpg","Components/Kaushal-Latest.pdf","Components/MenuComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["Markdown","props","DashboardComponent","Container","Card","CardMedia","src","typingImage","width","height","CardContent","Typography","MarkdownRenderer","content","EducationComponent","useState","educationContent","setEducationContent","useEffect","fetch","Education","then","response","text","ExperienceComponent","experienceContent","setExperienceContent","Experience","darkTheme","createTheme","palette","type","ProjectsComponent","projectsContent","setProjectsContent","Projects","componentToDisplay","name","DisplayController","ThemeProvider","theme","style","marginLeft","component","MenuItems","MenuIcons","MenuComponent","Drawer","variant","Toolbar","List","Tooltip","title","Box","mx","href","resumePDF","Avatar","avatar","ListItemText","primary","Divider","map","index","ListItem","button","onClick","clickFunction","ListItemIcon","App","selectedComponent","setSelectedComponent","page","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a4d86f53.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Markdown = (props) => {\r\n    return(<></>)\r\n}\r\n\r\nexport default Markdown;","export default __webpack_public_path__ + \"static/media/main.fd9bac96.jpg\";","import React from 'react';\nimport { Card, CardContent, CardMedia, Container, Typography } from '@material-ui/core';\nimport typingImage from './Images/main.jpg'\n\nconst DashboardComponent = () => {\n    return (\n        <Container>\n            <Card >\n                <CardMedia>\n                    <img src={typingImage} width='100%' height='90%' />\n                </CardMedia>\n                <CardContent>\n                    <Typography >\n                        \"When the body gets tired, mind says \n                        'This is where winners are made.' When mind gets tired, my heart says \n                        'This is where Champions are made.'\" - Baylor Barbee\n                    </Typography>\n                </CardContent>\n            </Card>\n        </Container>\n    )\n}\n\nexport default DashboardComponent;\n","import React from 'react';\nimport Markdown from 'markdown-to-jsx';\n\nconst MarkdownRenderer = (props) => {\n    return (\n        <Markdown>\n            {props.content}\n        </Markdown>\n    )\n\n}            \n        \nexport default MarkdownRenderer;","export default __webpack_public_path__ + \"static/media/Education.d21744fa.md\";","import React ,{ useState, useEffect } from 'react';\n// import { Card, Container, Divider, Grid, Typography } from '@material-ui/core';\nimport MarkdownRenderer from './MarkdownRenderer';\nimport Education from './MdFiles/Education.md'\n\nconst EducationComponent = () => {\n\n    const [educationContent, setEducationContent] = useState('')\n\n    useEffect(() => {\n        fetch(Education).then((response) => response.text()).then((text) => setEducationContent(text))\n    })\n\n    return (<MarkdownRenderer content= { educationContent } />)\n}\n\nexport default EducationComponent;\n","export default __webpack_public_path__ + \"static/media/Experience.fda22b84.md\";","import React ,{ useState, useEffect } from 'react';\nimport Experience from './MdFiles/Experience.md';\nimport MarkdownRenderer from './MarkdownRenderer';\n\n\nconst ExperienceComponent = (props) => {\n\n    const [experienceContent, setExperienceContent] = useState('')\n\n    useEffect(() => {\n        fetch(Experience).then((response) => response.text()).then((text) => setExperienceContent(text))\n    })\n\n    return (\n        <MarkdownRenderer content={ experienceContent } />\n    )\n}\n\nexport default ExperienceComponent;","import { createTheme } from '@material-ui/core';\n\nexport const darkTheme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n","export default __webpack_public_path__ + \"static/media/Projects.9090568f.md\";","import React ,{ useState, useEffect } from 'react';\nimport MarkdownRenderer from './MarkdownRenderer';\nimport Projects from './MdFiles/Projects.md'\n\nconst ProjectsComponent = (props) => {\n\n    const [projectsContent, setProjectsContent] = useState('')\n\n    useEffect(() => {\n        fetch(Projects).then((response) => response.text()).then((text) => setProjectsContent(text))\n    })\n\n    return (\n      <MarkdownRenderer content={ projectsContent } />\n    );\n}\n\nexport default ProjectsComponent;\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core';\nimport Markdown from './Markdown';\nimport DashboardComponent from './DashboardComponent'\nimport EducationComponent  from './EducationComponent';\nimport ExperienceComponent from './ExperienceComponent';\nimport { darkTheme } from './Themes'\nimport ProjectsComponent from './ProjectsComponent';\n\n\nconst componentToDisplay = (name) => {\n    switch(name) {\n      case \"Education\":\n        return <EducationComponent />;\n      case \"Experience\":\n        return <ExperienceComponent />;\n      case \"Projects\":\n        return <ProjectsComponent />;\n      case \"Markdown\":\n        return <Markdown />\n      default:\n        return <DashboardComponent />;\n    }\n}\n\nconst DisplayController = (props) => {\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <main style={{marginLeft:'180px'}}>\n                { componentToDisplay(props.component) }\n            </main>\n        </ThemeProvider>\n    );\n}\n\nexport default DisplayController;\n","export default __webpack_public_path__ + \"static/media/logo.99f21c53.jpg\";","export default __webpack_public_path__ + \"static/media/Kaushal-Latest.30245711.pdf\";","import React from 'react';\nimport { Avatar, Box, Drawer, Divider, List, ListItem, ListItemIcon, ListItemText, Toolbar, Tooltip } from '@material-ui/core';\nimport BookIcon from '@material-ui/icons/Book';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport WorkIcon from '@material-ui/icons/Work';\nimport avatar from './Images/logo.jpg';\nimport resumePDF from './Kaushal-Latest.pdf';\n\nconst MenuItems = [\"Dashboard\", \"Education\", \"Experience\", \"Projects\"];\nconst MenuIcons = [<HomeIcon/>, <BookIcon/>, <WorkIcon/>, <HomeWorkIcon/>];\n\n// const map = {\n//     \"Dashboard\" : <HomeIcon />,\n//     \"Education\" : <BookIcon />,\n//     \"Experience\": <WorkIcon />,\n//     \"Projects\"  : <HomeWorkIcon />\n// }\n\nconst MenuComponent = (props) => {\n    return (\n        <Drawer variant='permanent'>\n            <Toolbar/>\n            <List>\n                <Tooltip title='Resume'>\n                    <Toolbar variant='dense'>\n                        <Box mx='auto'>\n                            <a href={resumePDF} >\n                                <Avatar src={avatar}/>\n                            </a>\n                        </Box>\n                    </Toolbar>\n                </Tooltip>\n                <ListItemText primary='Kaushal Kanakamedala'/>\n                <Divider />\n                {MenuItems.map((text, index) => (\n                    <ListItem button key={text} onClick={() => props.clickFunction(text)}>\n                        <ListItemIcon>{MenuIcons[index]}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </Drawer>\n    );\n}\n\nexport default MenuComponent;\n","import React, { useState } from 'react';\nimport { ThemeProvider } from '@material-ui/core';\nimport DisplayController from './Components/DisplayController'\nimport MenuComponent from './Components/MenuComponent';\nimport { darkTheme } from './Components/Themes'\n\n\nconst App = (props) => {\n  const [selectedComponent, setSelectedComponent] = useState('Dashboard')\n  return (\n    <ThemeProvider theme={darkTheme}>\n        {/* Fix later to show name and phone on the AppBar */}\n        {/* <HeaderComponent />  */}\n        {/* Make it mini varient when it will collapse for mobile display */}\n        <MenuComponent clickFunction={(page) => setSelectedComponent(page)}/>\n        <DisplayController component={selectedComponent}/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}